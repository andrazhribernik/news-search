<?php
class Db {
  var $dbcon;
  
  /**
   * Naredi nov objekt in se poveze na bazo.
   *
   * @param string $dsn ODBC DSN za bazo
   * @param string $username Uporabnisko ime za dostop
   * @param string $password Geslo za dostop
   * @return Db 
   */
  function Db($dsn, $username, $password) {
    $con = odbc_connect($dsn, $username, $password);
    if ($con === false) {
      throw new Exception('Prišlo je do težav pri povezovanju s podatkovno bazo. Prosimo poskusite kasneje.');
    } else {
      $this->dbcon = $con;
    }
  }
  
  //REST
  function getUserVpisna($vpisna) {
    $cols = "ime,priimek,datum_rojstva,vpisna,clanica_kratica,upn,Tinsert,Tactivate,Tsync,kandidat,activate,emso";
    $query = "SELECT $cols FROM student WHERE vpisna LIKE '$vpisna'";
    $result = odbc_exec($this->dbcon, $query);
    $row = odbc_fetch_array($result);
    if ($row === false) {
      return false;
    } else {
	  $row_utf8 = array_map('toUtf', $row);
	  //$row_encoded = array_map('utf8_encode', $row_utf8);
	  return $row_utf8;
    }
  } //function getUserVpisna
  
  function upnExists($upn) {
  	$cols = "vpisna,upn";
  	$query = "SELECT $cols FROM student WHERE upn LIKE '$upn'";
  	$result = odbc_exec($this->dbcon, $query);
  	$row = odbc_fetch_array($result);
  	if ($row === false) {
  		return false;
  	} else {
  		return true;
  	}
  }
  
   
  function activateUser($vpisna, $password) {
    $query = "UPDATE student SET activate = '1', password = '$password', Tactivate = getdate() WHERE vpisna LIKE '$vpisna'";
    $result = odbc_exec($this->dbcon, $query);
    return $result;
  }

  function resetUser($vpisna, $password) {
    $query = "UPDATE student SET password = '$password', Tsync = null, Tupdate = null WHERE vpisna LIKE '$vpisna'";
    $result = odbc_exec($this->dbcon, $query);
    return $result;
  }
  
  function getRandomPass($length) {
	$time = gettimeofday();
    srand($time["sec"] + $time["usec"]); //sekunde so premalo natancne
    $chars = "abcdefghjkmnpqrstuvwx23456789ABCDEFGHJKMNPQRSTUVWX";
    $password = "";
    while(mb_strlen($password) < $length) {
        $password .= substr($chars, rand() % (mb_strlen($chars)), 1);
    }
    return($password);
  }
  
  function getUpns($upn) {
    $cols = "ime,priimek,vpisna,clanica_kratica,upn,activate,emso";
    $query = "SELECT TOP 100 $cols FROM student WHERE upn LIKE '$upn'";
    $result = odbc_exec($this->dbcon, $query);
	
    echo "<table class=\"list\">";
	echo "<tr>	  <td class=\"header\"><b>Vpisna št</b></td>	  <td class=\"header\"><b>Priimek</b></td>	  <td class=\"header\"><b>Ime</b></td>	  <td class=\"header\"><b>Članica</b></td>	  <td class=\"header\"><b>UPN</b></td> <td class=\"header\"><b>EMŠO</b></td>	  <td class=\"header\"><b>Aktiviran</b></td><td class=\"header\"></td></tr>";
	while ($row = odbc_fetch_array($result)) {
	  $priimek = mb_strtoupper(toUtf($row['priimek']));
	  $ime = mb_strtoupper(toUtf($row['ime']));
      printf("<tr>");
      printf("<td style=\"text-align: right;\">%s</td>", $row['vpisna']);
	    printf("<td style=\"text-align: left;\">%s</td>", $priimek);
	    printf("<td style=\"text-align: left;\">%s</td>", $ime);
      printf("<td style=\"text-align: center;\">%s</td>", toUtf($row['clanica_kratica']));
      printf("<td>%s</td>", $row['upn']);
	    printf("<td>%s</td>", $row['emso']);
      if ($row['activate'] == "1") echo "<td style=\"text-align: center;\">Da</td>";
      else echo "<td style=\"text-align: center;\">Ne</td>";
	    echo "<td class=\"action\"><a href=\"{$_SERVER["PHP_SELF"]}?action=findvpisna2&vpisna={$row['vpisna']}\">Podrobnosti</a></td>";
      printf("</tr>");  
    }
    echo "</table>";	
  }

  function getUpnsClanica($clanica, $datumod = false, $datumdo = false) {
    $cols = "ime,priimek,vpisna,clanica_kratica,upn,activate,emso";
	  $query = "";
	  if ($datumod === false && $datumdo === false) {
	    $query = "SELECT TOP(512) $cols FROM student WHERE clanica_kratica LIKE '$clanica%' ORDER BY clanica_kratica,vpisna ";
	  } else {
	    $sqldatumod = strftime("%Y-%m-%d %H:%M:%S", $datumod);
	    $sqldatumdo = strftime("%Y-%m-%d %H:%M:%S", $datumdo);
      $query = "SELECT $cols FROM student WHERE clanica_kratica LIKE '$clanica%' AND Tinsert > '$sqldatumod' AND Tinsert < '$sqldatumdo' ORDER BY clanica_kratica,vpisna";
	  }
	  //echo $query;
	  if (isset($GLOBALS['printemso']) && $GLOBALS['printemso'] == 1) $printemso = true;
	  else $printemso = false;
	
    $result = odbc_exec($this->dbcon, $query);
    echo "<table class=\"list\">";
    //echo "<tr><td class=\"header\"><b>Vpisna št</b></td><td class=\"header\"><b>Članica</b></td><td class=\"header\"><b>UPN</b></td><td class=\"header\"><b>Račun aktiviran</b></td><td class=\"header\"><b>Ime</b></td><td class=\"header\"><b>Priimek</b></td></tr>";
    if (!$printemso) echo "<tr>	  <td class=\"header\"><b>Vpisna št</b></td>	  <td class=\"header\"><b>Priimek</b></td>	  <td class=\"header\"><b>Ime</b></td>	  <td class=\"header\"><b>Članica</b></td>	  <td class=\"header\"><b>UPN</b></td>	  <td class=\"header\"><b>Aktiviran</b></td></tr>";
	  else echo "<tr>	  <td class=\"header\"><b>Vpisna št</b></td>	  <td class=\"header\"><b>Priimek</b></td>	  <td class=\"header\"><b>Ime</b></td>	  <td class=\"header\"><b>Članica</b></td>	  <td class=\"header\"><b>UPN</b></td> <td class=\"header\"><b>EMŠO</b></td>	  <td class=\"header\"><b>Aktiviran</b></td></tr>";
	  while ($row = odbc_fetch_array($result)) {
	    foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
	    $priimek = mb_strtoupper($row['priimek']);
	    $ime = mb_strtoupper($row['ime']);
      echo "<tr>";
      echo "<td style=\"text-align: right;\">{$row['vpisna']}</td>";
	    echo "<td style=\"text-align: left;\">{$priimek}</td>";
	    echo "<td style=\"text-align: left;\">{$ime}</td>";
      echo "<td style=\"text-align: center;\">{$row['clanica_kratica']}</td>";
      echo "<td>{$row['upn']}</td>";
	    if ($printemso) echo "<td>{$row['emso']}</td>";
      if ($row['activate'] == "1") echo "<td style=\"text-align: center;\">Da</td>";
      else echo "<td style=\"text-align: center;\">Ne</td>";
      echo "</tr>";  
    }
    echo "</table>";
  }

  function getUpnsVis($clanica, $datumod = false, $datumdo = false) {
    $cols = "ime,priimek,vpisna,clanica_kratica,upn,activate,emso";
	  $query = "";
	
	  $carray = explode(" ", $clanica);
	  $cq = "";
	  if (count($carray) > 0) {
	    $curcnt = 0;
	    $cq .= "(";
	    foreach($carray as $kratica) {
	      $cq .= "clanica_kratica LIKE '$kratica%' ";
		    $curcnt += 1;
		    if ($curcnt < count($carray)) $cq .= " OR ";
	    }
	    $cq .= ")";
	  } else {
		  echo "Seznam clanic ni dolocen.";
		  return;
	  }
	
	  if ($datumod === false && $datumdo === false) {
	    $query = "SELECT $cols FROM student WHERE $cq ORDER BY clanica_kratica,vpisna";
	  } else {
      $sqldatumod = strftime("%Y-%m-%d %H:%M:%S", $datumod);
      $sqldatumdo = strftime("%Y-%m-%d %H:%M:%S", $datumdo);
      $query = "SELECT $cols FROM student WHERE $cq AND Tinsert > '$sqldatumod' AND Tinsert < '$sqldatumdo' ORDER BY clanica_kratica,vpisna";
	  }
	  //echo $query;
	  if (isset($GLOBALS['printemso']) && $GLOBALS['printemso'] == 1) $printemso = true;
	  else $printemso = false;
	
    $result = odbc_exec($this->dbcon, $query);
    echo "<table class=\"list\">";
    //echo "<tr><td class=\"header\"><b>Vpisna št</b></td><td class=\"header\"><b>Članica</b></td><td class=\"header\"><b>UPN</b></td><td class=\"header\"><b>Račun aktiviran</b></td><td class=\"header\"><b>Ime</b></td><td class=\"header\"><b>Priimek</b></td></tr>";
    if (!$printemso) echo "<tr>	  <td class=\"header\"><b>Vpisna št</b></td>	  <td class=\"header\"><b>Priimek</b></td>	  <td class=\"header\"><b>Ime</b></td>	  <td class=\"header\"><b>Članica</b></td>	  <td class=\"header\"><b>UPN</b></td>	  <td class=\"header\"><b>Aktiviran</b></td></tr>";
	  else echo "<tr>	  <td class=\"header\"><b>Vpisna št</b></td>	  <td class=\"header\"><b>Priimek</b></td>	  <td class=\"header\"><b>Ime</b></td>	  <td class=\"header\"><b>Članica</b></td>	  <td class=\"header\"><b>UPN</b></td> <td class=\"header\"><b>EMŠO</b></td>	  <td class=\"header\"><b>Aktiviran</b></td></tr>";
	  while ($row = odbc_fetch_array($result)) {
	    foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
	    $priimek = mb_strtoupper($row['priimek']);
	    $ime = mb_strtoupper($row['ime']);
      echo "<tr>";
      echo "<td style=\"text-align: right;\">{$row['vpisna']}</td>";
	    echo "<td style=\"text-align: left;\">{$priimek}</td>";
	    echo "<td style=\"text-align: left;\">{$ime}</td>";
      echo "<td style=\"text-align: center;\">{$row['clanica_kratica']}</td>";
      echo "<td>{$row['upn']}</td>";
	    if ($printemso) echo "<td>{$row['emso']}</td>";
      if ($row['activate'] == "1") echo "<td style=\"text-align: center;\">Da</td>";
      else echo "<td style=\"text-align: center;\">Ne</td>";
      echo "</tr>";  
    }
    echo "</table>";
  }

  function getUpnsClanicaCSVVis($clanica, $datumod = false, $datumdo = false) {
    $cols = "ime,priimek,vpisna,clanica_kratica,upn,activate,emso";
  	$query = "";
	
	  $carray = explode(" ", $clanica);
	  $cq = "";
	  if (count($carray) > 0) {
	    $curcnt = 0;
	    $cq .= "(";
	    foreach($carray as $kratica) {
	      $cq .= "clanica_kratica LIKE '$kratica%' ";
		    $curcnt += 1;
		    if ($curcnt < count($carray)) $cq .= " OR ";
	    }
	    $cq .= ")";
	  } else {
		  return;
	  }	
	
	  if ($datumod === false && $datumdo === false) {
	    $query = "SELECT $cols FROM student WHERE $cq ORDER BY clanica_kratica,vpisna";
	  } else {
      $sqldatumod = strftime("%Y-%m-%d %H:%M:%S", $datumod);
      $sqldatumdo = strftime("%Y-%m-%d %H:%M:%S", $datumdo);
      $query = "SELECT $cols FROM student WHERE $cq AND Tinsert > '$sqldatumod' AND Tinsert < '$sqldatumdo' ORDER BY clanica_kratica,vpisna";
	  }
	  if (isset($_GET['emso']) && $_GET['emso'] == "1") $printemso = true; 
	  else $printemso = false; 
	
	  //echo $query;
    
	  $result = odbc_exec($this->dbcon, $query);
	
	  if ($printemso) echo "Vpisna_stevilka;Priimek;Ime;Clanica;UPN;EMSO;Aktiviran\n";
	  else echo "Vpisna_stevilka;Priimek;Ime;Clanica;UPN;Aktiviran\n";
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      $vpisna = trim($row['vpisna']);
      $clanica_kratica = trim($row['clanica_kratica']);
      $upn = trim($row['upn']);
	    $ime = mb_strtoupper(trim($row['ime']));
	    $priimek = mb_strtoupper(trim($row['priimek']));
	    $emso = trim($row['emso']);
      if ($row['activate'] == "1") $activate = "Da";
      else $activate = "Ne";
	    if ($printemso) echo "$vpisna;$priimek;$ime;$clanica_kratica;$upn;$emso;$activate\n";
      else echo "$vpisna;$priimek;$ime;$clanica_kratica;$upn;$activate\n";
    }
  }

  function getUpnsClanicaCSV($clanica, $datumod = false, $datumdo = false) {
    $cols = "ime,priimek,vpisna,clanica_kratica,upn,activate,emso";
	  $query = "";
	  if ($datumod === false && $datumdo === false) {
	    $query = "SELECT $cols FROM student WHERE clanica_kratica LIKE '$clanica%' ORDER BY clanica_kratica,vpisna";
	  } else {      
      $sqldatumod = strftime("%Y-%m-%d %H:%M:%S", $datumod);
      $sqldatumdo = strftime("%Y-%m-%d %H:%M:%S", $datumdo);
      
      $query = "SELECT $cols FROM student WHERE clanica_kratica LIKE '$clanica%' AND Tinsert > '$sqldatumod' AND Tinsert < '$sqldatumdo' ORDER BY clanica_kratica,vpisna";
	  }
	  if (isset($_GET['emso']) && $_GET['emso'] == "1") $printemso = true; 
	  else $printemso = false; 
    
	  $result = odbc_exec($this->dbcon, $query);
	
	  if ($printemso) echo "Vpisna_stevilka;Priimek;Ime;Clanica;UPN;EMSO;Aktiviran\n";
	  else echo "Vpisna_stevilka;Priimek;Ime;Clanica;UPN;Aktiviran\n";
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      $vpisna = trim($row['vpisna']);
      $clanica_kratica = trim($row['clanica_kratica']);
      $upn = trim($row['upn']);
	    $ime = mb_strtoupper(trim($row['ime']));
	    $priimek = mb_strtoupper(trim($row['priimek']));
	    $emso = trim($row['emso']);
      if ($row['activate'] == "1") $activate = "Da";
      else $activate = "Ne";
	    if ($printemso) echo "$vpisna;$priimek;$ime;$clanica_kratica;$upn;$emso;$activate\n";
      else echo "$vpisna;$priimek;$ime;$clanica_kratica;$upn;$activate\n";
    }
  }
  
	function getKandidatiCSV($clanica, $Tinsert) {
    $cols = "vpisna,clanica_kratica,priimek,ime,datum_rojstva,naslov,posta,upn,password,activate,Tinsert";
    $query = "SELECT $cols FROM student WHERE clanica_kratica LIKE '$clanica%' and kandidat='1' and Tinsert>='$Tinsert' and len(vpisna)<=8 ORDER BY priimek,ime";
    $result = odbc_exec($this->dbcon, $query);

    //glava CSVja
    echo "vpisna;clanica_kratica;priimek;ime;datum_rojstva;naslov;posta;upn;password;activate;Tinsert\n";
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      $vpisna = trim($row['vpisna']);
      $clanica_kratica = trim($row['clanica_kratica']); 
      $priimek = trim($row['priimek']);
      $ime = trim($row['ime']);
      $datum_rojstva = trim($row['datum_rojstva']);  
      $naslov = trim($row['naslov']);
      $posta = trim($row['posta']);
      $upn = trim($row['upn']);
      $password = trim($row['password']);              
      if ($row['activate'] == "1") $activate = "Da";
      else $activate = "Ne";
      $Tinserted = trim($row['Tinsert']);
      echo "$vpisna;$clanica_kratica;$priimek;$ime;$datum_rojstva;$naslov;$posta;$upn;$password;$activate;$Tinserted\n";
    }
  }
 
  function getKandidatiCSVOdDo($clanica, $od, $do) {
    $cols = "student.upn as upn,student.password as geslo,student.ime as ime,student.priimek as priimek,student.naslov as snaslov,student.posta_st as spostast,student.posta as sposta,clanica_sifrant.naziv as fakulteta,clanica_sifrant.ulica as fnaslov,clanica_sifrant.posta_st as fpostast,clanica_sifrant.posta as fposta";
	  $where = "Tinsert <= '$do' and Tinsert >= '$od' and clanica_kratica LIKE '$clanica' and kandidat='1' and clanica_sifrant.kratica = student.clanica_kratica";
    $query = "SELECT $cols FROM student,clanica_sifrant WHERE $where ORDER BY clanica_kratica,priimek,ime";
    $result = odbc_exec($this->dbcon, $query);

    //glava CSVja
    echo "UPN;Geslo;Ime;Priimek;Naslov;Posta_st;Posta;Fakulteta;Fakulteta_naslov;Fakulteta_posta_st;Fakulteta_posta\n";
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      $upn = trim($row['upn']);
	    $geslo = trim($row['geslo']); 
      $ime = $this->win1250ToUpper(trim($row['ime']));
      $priimek = $this->win1250ToUpper(trim($row['priimek']));
      $snaslov = $this->win1250ToUpper(trim($row['snaslov']));
      $spostast = trim($row['spostast']);
	    $sposta = $this->win1250ToUpper(trim($row['sposta']));
	    $fakulteta = $this->win1250ToUpper(trim($row['fakulteta']));
	    $fnaslov = $this->win1250ToUpper(trim($row['fnaslov']));
	    $fpostast = trim($row['fpostast']);
	    $fposta = $this->win1250ToUpper(trim($row['fposta']));
      echo "$upn;$geslo;$ime;$priimek;$snaslov;$spostast;$sposta;$fakulteta;$fnaslov;$fpostast;$fposta\n";
    }
  }
  
  
  function getKandidatiUpnGeslo($clanica, $od, $do) {
    $cols = "student.upn as upn,student.password as geslo,student.ime as ime,student.priimek as priimek,clanica_sifrant.naziv as fakulteta";
	  $where = "student.Tinsert <= '$do' and student.Tinsert >= '$od' and student.clanica_kratica LIKE '$clanica' and student.kandidat='1' and clanica_sifrant.kratica = student.clanica_kratica";
    $query = "SELECT $cols FROM student,clanica_sifrant WHERE $where ORDER BY fakulteta,priimek,ime";
    $result = odbc_exec($this->dbcon, $query);
    
    //glava CSVja
    echo "UPN;Geslo;Ime;Priimek;Fakulteta\n";
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      $upn = trim($row['upn']);
	    $geslo = trim($row['geslo']); 
      $ime = $this->win1250ToUpper(trim($row['ime']));
      $priimek = $this->win1250ToUpper(trim($row['priimek']));
	    $fakulteta = $this->win1250ToUpper(trim($row['fakulteta']));
      echo "$upn;$geslo;$ime;$priimek;$fakulteta\n";
    }
  }

 
  function getNames($ime, $priimek, $clanica) {
    $ime = to1250($ime);
    $priimek = to1250($priimek);
    $clanica = to1250($clanica);
    $cols = "ime,priimek,vpisna,clanica_kratica,upn,activate,emso,datum_rojstva";
    $query = "SELECT TOP 100 $cols FROM student WHERE ime LIKE '$ime' AND priimek LIKE '$priimek' AND clanica_kratica LIKE '$clanica%'";
    $result = odbc_exec($this->dbcon, $query);
    echo "<table class=\"list\">";
    echo "<tr><td class=\"header\"><b>Vpisna št</b></td><td class=\"header\"><b>Članica</b></td><td class=\"header\"><b>Ime</b></td><td class=\"header\"><b>Priimek</b></td><td class=\"header\"><b>UPN</b></td><td class=\"header\"><b>EMŠO</b></td><td class=\"header\"><b>Datum rojstva</b></td><td class=\"header\"><b>Aktiviran</b></td><td class=\"header\"></td></tr>";
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      echo "<tr>";
      echo "<td style=\"text-align: right;\">{$row['vpisna']}</td>";
      echo "<td style=\"text-align: center;\">{$row['clanica_kratica']}</td>";
      echo "<td>{$row['ime']}</td>";
      echo "<td>{$row['priimek']}</td>";
      echo "<td>{$row['upn']}</td>";
	    echo "<td>{$row['emso']}</td>";
	    echo "<td>".$this->usDate2siDate($row['datum_rojstva'])."</td>";
      if ($row['activate'] == "1") echo "<td style=\"text-align: center;\">Da</td>";
      else echo "<td style=\"text-align: center;\">Ne</td>";
      echo "<td class=\"action\"><a href=\"{$_SERVER["PHP_SELF"]}?action=findvpisna2&vpisna={$row['vpisna']}\">Podrobnosti</a></td>";
      echo "</tr>";  
    }
    echo "</table>";
  }
  
  function getClanicaSifrantSelect($selected_clanica = null) {
    $cols = "kratica,ime";
    $query = "SELECT $cols FROM clanica_sifrant ORDER BY 'kratica'";
    $result = odbc_exec($this->dbcon, $query);
    while ($row = odbc_fetch_array($result)) {
      foreach ($row as $key => $value) $row[$key] = toUtf($row[$key]);
      echo "<option value=\"", $row['kratica'],"\"";
	    if ($selected_clanica == $row['kratica']) echo " selected";
	    echo ">", $row['ime'], "</option>";
    }
  }
  
  function setDateFormat() {
    $query = "SET DATEFORMAT ymd";
    $msres = odbc_exec($this->dbcon, $query);
    if ($msres === false) return false;
    else return true;
  }
  
  function removeIntlChars($string) {
	  //$search  = array('Č','č','Ć','ć','Ž','ž','Š','š','Đ','đ','Ł','ł','ä','Ä','ë','Ë','ö','Ö','ü','Ü','ß');
	  //$replace = array('C','c','C','c','Z','z','S','s','D','d','L','l','a','A','e','E','o','O','u','U','s');
	  //$lower = str_replace($search, $replace, $string);
    $lower = iconv("UTF-8", "ASCII//TRANSLIT", $string);  
    $lower = mb_strtolower($lower);
    $out = "";
    for ($i = 0; $i < strlen($lower); $i++) {
      if (ord($lower[$i]) <= 122 && ord($lower[$i]) >= 97) {
        $out .= $lower[$i];
      }
    }
    return($out);
  }
  
  function win1250ToUpper($string) {
    $result = mb_strtoupper($string);
	  //$search  = array('č','ć','ž','š','đ','ł','ä','ë','ö','ü');
	  //$replace = array('Č','Ć','Ž','Š','Đ','Ł','Ä','Ë','Ö','Ü');
	  //$upper = str_replace($search, $replace, $result);
	  return $result;    
  }
  
  function getPrefix($ime, $priimek) {
    $imeno = $this->removeIntlChars($ime);
    $priimekno = $this->removeIntlChars($priimek);
    $prefix = substr($imeno,0,1) . substr($priimekno,0,1);
    return mb_strtolower($prefix); 
  }
  
  //REST
  function insert($ime, $priimek, $datum_rojstva, $vpisna, $clanica, $username, $password, $emso = "0000000000000", $kandidat = 0) {
  	$clanica = trim($clanica);
    $cols = "ime,priimek,datum_rojstva,vpisna,clanica_kratica,username,[password],upn,kandidat,
             activate,Tinsert,emso";
    $vals = "'$ime', '$priimek', '$datum_rojstva', '$vpisna', '$clanica', '$username', 
             '$password','$username@student.uni-lj.si','$kandidat','0',getdate(),'$emso'"; 
    $query = "INSERT INTO student ($cols) VALUES ($vals)";
    $query = to1250($query);
    
    $msres = odbc_exec($this->dbcon, $query);
    if ($msres === false) return false;
    else return true;
  }
  
  //REST
  function update($ime, $priimek, $clanica, $vpisna, $datum_rojstva) {
 	$clanica = trim($clanica);
    $query = "UPDATE student SET ime = '$ime', priimek = '$priimek', clanica_kratica = '$clanica', datum_rojstva = '$datum_rojstva' WHERE vpisna = '$vpisna'";
    $query = to1250($query);
    
    $msres = odbc_exec($this->dbcon, $query);
    if ($msres === false) return false;
    else return true;  	
  }
  
  
  
  function insertUser($ime, $priimek, $clanica, $vpisna, $datum_rojstva, $emso = "0000000000000", $kandidat = 0) {
    if (!$this->setDateFormat()) {
      throw new Exception("Napaka pri povezavi s podatkovno bazo: setDateFormat.");
    }
	
	  if ($vpisna === -1) {
	    $vpisna = $this->getNextVpisnaSeq();
	  }
	
    if (($user = $this->getUserVpisna($vpisna)) !== false) {
      throw new Exception("Ta vpisna številka je že v bazi.");
    }
    $password = $this->getRandomPass(10);
    $prefix = $this->getPrefix($ime, $priimek);
    $suffix = rand(0,9999);
  
    $username = sprintf("%s%04d",$prefix,$suffix);

    $iok = false;
    while (!$iok) {
	  if ($this->insert($ime, $priimek, $datum_rojstva, $vpisna, $clanica, $username, $password, $emso, $kandidat)) {
	    $iok = true;
	  } else {
        $suffix = ($suffix+1) % 10000;
	    $username = sprintf("%s%04d",$prefix,$suffix);	
	  }
    }
	
	
	
  }
 
  //REST
  function insertStudent($ime, $priimek, $clanica, $vpisna, $datum_rojstva) {
    if (!$this->setDateFormat()) {
      throw new Exception("Napaka pri povezavi s podatkovno bazo: setDateFormat.");
    }
		
    if (($user = $this->getUserVpisna($vpisna)) !== false) {
      //vpisna already in the DB, do update
      if ($this->update($ime, $priimek, $clanica, $vpisna, $datum_rojstva) === false) {
      	throw new Exception("Could not update the record for vpisna: " . $vpisna);
      } 
      return;
    }
	
    $password = $this->getRandomPass(12);
    $prefix = $this->getPrefix($ime, $priimek);
    $suffix = rand(0,9999);
  
    $username = sprintf("%s%04d",$prefix,$suffix);

    $iok = false;
    while (!$iok) {
	  if ($this->insert($ime, $priimek, $datum_rojstva, $vpisna, $clanica, $username, $password)) {
	    $iok = true;
	  } else {
        $suffix = ($suffix+1) % 10000;
	    $username = sprintf("%s%04d",$prefix,$suffix);	
	  }
    }
  } //function insertStudent
  

  function insertKandidatEmsoHelper($ime, $priimek, $datum_rojstva, $vpisna, $clanica, $username, $password, $emso) {
  	$clanica = trim($clanica);
  	$cols = "ime,priimek,datum_rojstva,vpisna,clanica_kratica,username,[password],upn,kandidat,activate,Tinsert,emso";
  	$vals = "'$ime', '$priimek', '$datum_rojstva', '$vpisna', '$clanica', '$username', 
  	 '$password','$username@student.uni-lj.si','1','1',getdate(),'$emso'";
  	$query = "INSERT INTO student ($cols) VALUES ($vals)";
  	$query = to1250($query);
  
  	$msres = odbc_exec($this->dbcon, $query);
  	if ($msres === false) return false;
  	else return true;
  }
  
                              
  function insertKandidatEmso($ime, $priimek, $clanica, $vpisna, $datum_rojstva, $emso) {
  	if (!$this->setDateFormat()) {
  		throw new Exception("Napaka pri povezavi s podatkovno bazo: setDateFormat.");
  	}
  
  	if ($vpisna === -1) {
  		$vpisna = $this->getNextVpisnaSeq();
  	}
  
  	if (($user = $this->getUserVpisna($vpisna)) !== false) {
  		throw new Exception("Ta vpisna številka je že v bazi.");
  	}
  	$password = $this->getRandomPass(10);
  	$prefix = $this->getPrefix($ime, $priimek);
  	$suffix = rand(0,9999);
  
  	$username = sprintf("%s%04d",$prefix,$suffix);
  
  	$iok = false;
  	while (!$iok) {
  		if ($this->insertKandidatEmsoHelper($ime, $priimek, $datum_rojstva, $vpisna, $clanica, $username, $password, $emso)) {
  			$iok = true;
  		} else {
  			$suffix = ($suffix+1) % 10000;
  			$username = sprintf("%s%04d",$prefix,$suffix);
  		}
  	}
  }
  
 
  function insertKandidatVpisna($ime, $priimek, $clanica, $vpisna, $datum_rojstva, $emso) {
  	if (!$this->setDateFormat()) {
  		throw new Exception("Napaka pri povezavi s podatkovno bazo: setDateFormat.");
  	}
  
  	if ($vpisna === -1) {
  		$vpisna = $this->getNextVpisnaSeq();
  	}
  
  	if (($user = $this->getUserVpisna($vpisna)) !== false) {
  		throw new Exception("Ta vpisna številka je že v bazi.");
  	}
  	$password = $this->getRandomPass(10);
  	$prefix = $this->getPrefix($ime, $priimek);
  	$suffix = rand(0,9999);
  
  	$username = sprintf("%s%04d",$prefix,$suffix);
  
  	$iok = false;
  	while (!$iok) {
  		if ($this->insertKandidatEmsoHelper($ime, $priimek, $datum_rojstva, $vpisna, $clanica, $username, $password, $emso)) {
  			$iok = true;
  		} else {
  			$suffix = ($suffix+1) % 10000;
  			$username = sprintf("%s%04d",$prefix,$suffix);
  		}
  	}
  }
  

  

  function insertKandidatHelper($kdata, $username, $password) {
  	$clanica_kratica = $this->getClanicaKraticaFromZavod($kdata["zavod"]);
  	$kraj = $this->getPosta($kdata["posta"]);
  	$upn = "$username@student.uni-lj.si";
  	if ($kdata["emso"] === false || $kdata["emso"] == '0000000000000') {
  		$datum = '1970-01-01';
  		$emso = $username;
  	}
  	
  	
  	$cols = "ime,priimek,datum_rojstva,vpisna,
  		clanica_kratica,username,[password],upn,kandidat,activate,
  		Tinsert,Tactivate,naslov,posta_st,posta,telefon,gsm,emso";
  	$vals = "'{$kdata["ime"]}', '{$kdata["priimek"]}', '{$kdata["datum_rojstva"]}', '{$kdata["kandidat"]}', 
  		'$clanica_kratica', '$username', '$password', '$upn', '1', '1', 
  		getdate(), getdate(), '{$kdata["naslov"]}', '{$kdata["posta"]}', '$kraj', '{$kdata["telefon"]}', '{$kdata["gsm"]}', 
		'{$kdata["emso"]}'";
  	$query = "INSERT INTO student ($cols) VALUES ($vals)";
    $query = to1250($query);
  	
  	$msres = odbc_exec($this->dbcon, $query);
  	if ($msres === false) return false;
  	else return true;  	
  }
  
  function insertKandidat($kdata) {
  	if (!$this->setDateFormat()) {
  		throw new Exception("insertKandidat: Napaka pri povezavi s podatkovno bazo: setDateFormat.");
  	}
  	if (($user = $this->getUserVpisna($kdata["kandidat"])) !== false) {
  		throw new Exception("insertKandidat: Ta številka kandidata je že v bazi.");
  	}
  	$password = $this->getRandomPass(10);
  	$prefix = $this->getPrefix($kdata["ime"], $kdata["priimek"]);
  	$suffix = rand(0,9999);
  	
  	$username = sprintf("%s%04d",$prefix,$suffix);
  	
  	$iok = false;
  	while (!$iok) {
  		if ($this->insertKandidatHelper($kdata, $username, $password)) {
  			$iok = true;
  		} else {
  			$suffix = ($suffix+1) % 10000;
  			$username = sprintf("%s%04d",$prefix,$suffix);
  		}
  	} 
  }
  
  function upari($udata) {
  	if ($udata["vpisna"] === null || $udata["upn"] === null) throw new Exception("Vpisna ali UPN sta null.");
  	if (!$this->upnExists($udata["upn"])) throw new Exception("UPN-ja ni v podatkovni bazi: {$udata["upn"]}");
  	
  	$query = "UPDATE student SET vpisna = '{$udata["vpisna"]}', Tsync = null, Tupdate = null WHERE upn LIKE '{$udata["upn"]}'";
  	$result = odbc_exec($this->dbcon, $query);
  	if ($result === false) throw new Exception("Uparjanje ni uspelo: {$udata["upn"]}");
  	return $result;
  }
  
  
  function getCountStudents($year, $month) {
    if ($month == 12) {
      $dateto = sprintf("%04d-%02d-%02d", $year+1, 1, 1); 
    } else {
      $dateto = sprintf("%04d-%02d-%02d", $year, $month+1, 1);
    }
    $this->setDateFormat();
    $query = "SELECT count(upn) as total FROM student WHERE Tinsert < '$dateto'";
    $result = odbc_exec($this->dbcon, $query);
    $row = odbc_fetch_array($result);
    if ($row === false) {
      return false;
    } else {
      return $row['total'];
    }
  }

  function getCountActivated($year, $month) {
    if ($month == 12) {
      $dateto = sprintf("%04d-%02d-%02d", $year+1, 1, 1); 
    } else {
      $dateto = sprintf("%04d-%02d-%02d", $year, $month+1, 1);
    }
    $this->setDateFormat();
    $query = "SELECT count(upn) as total FROM student WHERE Tactivate IS NOT NULL AND Tactivate < '$dateto'";
    $result = odbc_exec($this->dbcon, $query);
    $row = odbc_fetch_array($result);
    if ($row === false) {
      return false;
    } else {
      return $row['total'];
    }
  }

  function getCountActivatedMonth($year, $month) {
    if ($month == 12) {
      $dateto = sprintf("%04d-%02d-%02d", $year+1, 1, 1); 
    } else {
      $dateto = sprintf("%04d-%02d-%02d", $year, $month+1, 1);
    }
    $datefrom = sprintf("%04d-%02d-%02d", $year, $month, 1);     
    
    $this->setDateFormat();
    $query = "SELECT count(upn) as total FROM student WHERE Tactivate IS NOT NULL AND Tactivate >= '$datefrom' AND Tactivate < '$dateto'";
    $result = odbc_exec($this->dbcon, $query);
    $row = odbc_fetch_array($result);
    if ($row === false) {
      return false;
    } else {
      return $row['total'];
    }
  }
  
  function getNextVpisnaSeq() {
  	$query = "EXEC GetSeq_student_vpisna_seq";
  	$result = odbc_exec($this->dbcon, $query);
  	$row = odbc_fetch_array($result);
  	if ($row === false) throw new Exception("getNextVpisnaSeq: napaka pri poizvedbi za naslednjo vpisno številko Cxxxxxxx.");
 		return trim($row["SeqVal"]);  
  }
  
  function getClanicaKraticaFromZavod($zavod) {
  	$cols = "kratica";
  	$query = "SELECT $cols FROM clanica WHERE zavod LIKE '$zavod'";
  	$result = odbc_exec($this->dbcon, $query);
  	$row = odbc_fetch_array($result);
  	if ($row === false) throw new Exception("getClanicaKraticaFromZavod: $zavod ne obstaja.");
 		return trim($row["kratica"]);
  }
  
  //REST
  function getClanicaKratica($id_clanice) {
   	if (preg_match("/^[0-9]+$/", $id_clanice) != 1) {
  		throw new Exception("db->getClanicaKratica: id_clanice ni veljaven: {$id_clanice}");
  	}
  
  	if ($this->dbcon === false) {
  		throw new Exception("db->getClanicaKratica: Ni povezave z bazo. id_clanice:{$id_clanice}");
  	}
  	 
  	$dbres = odbc_exec($this->dbcon, "SELECT KRATICA_IDP FROM ID_CLANICE_KRATICA_IDP WHERE ID_CLANICE = $id_clanice");
  	if ($dbres === false) {
  		throw new Exception("db->getClanicaKratica: Iskanje kratice clanice ni uspelo. id_clanice:{$id_clanice}");
  	}
  	$row = odbc_fetch_array($dbres);
  	if ($row === false) {
  		throw new Exception("db->getClanicaKratica: Kratice za to clanico ni mogoce najti. id_clanice: $id_clanice Row: $row");
  	}
  
  	return toUtf(trim($row['KRATICA_IDP']));	
  } //function getClanicaKratica
  
 
  
  function usDate2siDate($datestr) {
  	$dateobj = new DateTime($datestr);
  	return $dateobj->format('d.m.Y');
  }
  
  
}
?>